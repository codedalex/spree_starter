<%
  # Get theme settings - now properly using theme preferences
  theme = current_theme
  config = {
    title: theme.preferred_hero_title,
    subtitle: theme.preferred_hero_subtitle.presence,
    description: theme.preferred_hero_description,
    badge: {
      text: theme.preferred_hero_badge_text,
      enabled: theme.preferred_hero_badge_enabled,
      variant: theme.preferred_hero_badge_variant
    },
    image: {
      url: theme.preferred_hero_image_url,
      alt: theme.preferred_hero_title
    },
    layout: {
      content_alignment: theme.preferred_hero_content_alignment,
      image_position: theme.preferred_hero_image_position,
      background_style: theme.preferred_hero_background_style,
      decorative_elements: theme.preferred_hero_decorative_elements
    },
    buttons: {
      primary: {
        text: theme.preferred_hero_primary_button_text,
        url: theme.preferred_hero_primary_button_url
      },
      secondary: {
        text: theme.preferred_hero_secondary_button_text,
        url: theme.preferred_hero_secondary_button_url
      }
    },
    colors: {
      primary: theme.preferred_primary_color,
      accent: theme.preferred_accent_color,
      secondary: theme.preferred_neutral_color
    }
  }
  
  # Check if mobile (simplified)
  is_mobile = request.user_agent =~ /Mobile|Android|iPhone|iPad/
  
  # Dynamic CSS custom properties for theme colors
  css_vars = {
    '--color-primary' => config[:colors][:primary],
    '--color-accent' => config[:colors][:accent], 
    '--color-secondary' => config[:colors][:secondary]
  }.map { |k, v| "#{k}: #{v}" }.join('; ')
  
  # Layout classes based on configuration
  content_order = config[:layout][:image_position] == 'right' ? (is_mobile ? 'order-2' : 'order-1') : (is_mobile ? 'order-1' : 'order-2')
  image_order = config[:layout][:image_position] == 'right' ? (is_mobile ? 'order-1' : 'order-2') : (is_mobile ? 'order-2' : 'order-1')
  
  # Mobile layout override
  mobile_content_order = 'order-2' # content-first by default
  mobile_image_order = 'order-1'   # image-first by default
  
  text_alignment = if is_mobile
                     'text-center'
                   else
                     case config[:layout][:content_alignment]
                     when 'center' then 'text-center'
                     when 'right' then 'text-right'
                     else 'text-left'
                     end
                   end
  
  layout_classes = {
    content: "#{is_mobile ? mobile_content_order : content_order} #{text_alignment}",
    image: is_mobile ? mobile_image_order : image_order
  }
  
  # Badge classes helper - matching Next.js exactly
  badge_classes = case config[:badge][:variant]
                  when 'accent'
                    'px-3 py-1 rounded-full bg-accent/20 dark:bg-accent/30 backdrop-blur-sm border border-accent/30 dark:border-accent/50 text-accent dark:text-white text-sm font-medium'
                  when 'outline'
                    'px-3 py-1 rounded-full bg-transparent backdrop-blur-sm border-2 border-accent dark:border-white text-accent dark:text-white text-sm font-medium'
                  else
                    'px-3 py-1 rounded-full bg-accent/20 dark:bg-white/20 backdrop-blur-sm border border-accent/30 dark:border-white/30 text-primary dark:text-white text-sm font-medium'
                  end
  
  # Button classes helper - matching Next.js exactly
  def get_button_classes(variant)
    case variant
    when 'primary'
      'inline-flex items-center justify-center px-8 py-3 bg-accent text-white font-medium rounded-full hover:bg-secondary transition-all hover:shadow-xl hover:scale-105 shadow-md group'
    when 'secondary'
      'inline-flex items-center justify-center px-8 py-3 bg-secondary text-white font-medium rounded-full hover:bg-accent transition-all hover:shadow-xl hover:scale-105 shadow-md group'
    when 'outline'
      'inline-flex items-center justify-center px-8 py-3 border-2 border-secondary dark:border-white text-secondary dark:text-white font-medium rounded-full hover:bg-secondary/10 dark:hover:bg-white/10 transition group'
    else
      'inline-flex items-center justify-center px-8 py-3 bg-accent text-white font-medium rounded-full hover:bg-secondary transition-all hover:shadow-xl hover:scale-105 shadow-md group'
    end
  end
%>

<!-- Dynamic CSS variables for theme colors -->
<style>
  :root {
    <%= css_vars.html_safe %>
  }
  .bg-primary { background-color: var(--color-primary); }
  .text-primary { color: var(--color-primary); }
  .bg-accent { background-color: var(--color-accent); }
  .text-accent { color: var(--color-accent); }
  .bg-secondary { background-color: var(--color-secondary); }
  .text-secondary { color: var(--color-secondary); }
  .border-accent { border-color: var(--color-accent); }
  .border-secondary { border-color: var(--color-secondary); }
  .border-primary { border-color: var(--color-primary); }
  .from-accent\/20 { --tw-gradient-from: rgba(128, 190, 120, 0.2); }
  .to-secondary\/20 { --tw-gradient-to: rgba(107, 114, 128, 0.2); }
  .from-accent\/40 { --tw-gradient-from: rgba(128, 190, 120, 0.4); }
  .to-secondary\/40 { --tw-gradient-to: rgba(107, 114, 128, 0.4); }
  .hover\:bg-secondary:hover { background-color: var(--color-secondary); }
  .hover\:bg-accent:hover { background-color: var(--color-accent); }
</style>

<section class="relative min-h-[80vh] overflow-hidden <%= is_mobile ? 'hero-mobile-bg' : '' %>" style="<%= css_vars.html_safe %>">
  <!-- Dynamic Background - matching Next.js exactly -->
  <!-- Base background -->
  <div class="absolute inset-0 bg-slate-300 dark:bg-transparent z-0"></div>
  
  <% if config[:layout][:background_style] == 'gradient' %>
    <!-- Light mode gradient -->
    <div class="absolute inset-0 bg-gradient-to-br from-slate-200/80 to-slate-300/80 z-0 dark:opacity-0">
      <div class="absolute inset-0" style="background-image: url('data:image/svg+xml,%3Csvg width=\'100\' height=\'100\' viewBox=\'0 0 100 100\' xmlns=\'http://www.w3.org/2000/svg\'%3E%3Cpath d=\'M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z\' fill=\'%234a7856\' fill-opacity=\'0.1\' fill-rule=\'evenodd\'/%3E%3C/svg%3E'); background-size: 180px 180px;"></div>
    </div>
    
    <!-- Dark mode gradient - responsive like Next.js -->
    <% if is_mobile %>
      <div class="absolute inset-0 bg-gradient-to-b from-secondary/95 to-accent/95 overflow-hidden opacity-0 dark:opacity-100 z-0">
        <div class="absolute top-0 left-0 right-0 h-24 bg-white/5 rounded-b-full blur-lg"></div>
        <div class="absolute bottom-0 left-0 right-0 h-32 bg-white/10 rounded-t-full blur-xl"></div>
        <div class="absolute inset-0 opacity-20" style="background-image: url('data:image/svg+xml,%3Csvg width=\'20\' height=\'20\' viewBox=\'0 0 20 20\' xmlns=\'http://www.w3.org/2000/svg\'%3E%3Cg fill=\'%23ffffff\' fill-opacity=\'0.2\'%3E%3Cpath d=\'M0 0h10v10H0z\'/%3E%3Cpath d=\'M10 10h10v10H10z\'/%3E%3C/g%3E%3C/svg%3E'); background-size: 20px 20px;"></div>
      </div>
    <% else %>
      <div class="absolute inset-0 bg-gradient-to-br from-accent/90 to-secondary/90 overflow-hidden opacity-0 dark:opacity-100 z-0">
        <div class="absolute -top-16 -left-16 w-64 h-64 bg-white/10 rounded-full blur-xl"></div>
        <div class="absolute top-1/4 right-1/3 w-96 h-96 bg-white/5 rounded-full blur-xl"></div>
        <div class="absolute bottom-0 right-0 w-48 h-48 bg-white/10 rounded-full blur-lg"></div>
      </div>
    <% end %>
  <% elsif config[:layout][:background_style] == 'solid' %>
    <div class="absolute inset-0 bg-slate-100 dark:bg-slate-800 z-0"></div>
  <% elsif config[:layout][:background_style] == 'pattern' %>
    <div class="absolute inset-0 bg-slate-100 dark:bg-slate-800 z-0">
      <div class="absolute inset-0 opacity-20 dark:opacity-10" style="background-image: url('data:image/svg+xml,%3Csvg width=\'60\' height=\'60\' viewBox=\'0 0 60 60\' xmlns=\'http://www.w3.org/2000/svg\'%3E%3Cg fill=\'none\' fill-rule=\'evenodd\'%3E%3Cg fill=\'%234a7856\' fill-opacity=\'0.4\'%3E%3Cpath d=\'m36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z\'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E'); background-size: 60px 60px;"></div>
    </div>
  <% end %>
  
  <!-- Dark overlay for better text readability - only in dark mode -->
  <div class="absolute inset-0 bg-black/30 dark:opacity-100 opacity-0 z-0"></div>

  <!-- Content container with responsive layout -->
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-24 h-full flex items-center z-10">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center w-full">
      <!-- Content Side -->
      <div class="<%= layout_classes[:content] %>">
        <!-- Badge -->
        <% if config[:badge][:enabled] %>
          <div class="inline-block mb-6">
            <div class="<%= badge_classes %>">
              <%= config[:badge][:text] %>
            </div>
          </div>
        <% end %>
        
        <!-- Title -->
        <h1 class="text-4xl md:text-6xl text-primary dark:text-white font-bold mb-6">
          <%= config[:title] %>
        </h1>
        
        <!-- Subtitle (if exists) -->
        <% if config[:subtitle].present? %>
          <h2 class="text-2xl md:text-3xl text-secondary dark:text-white/80 font-medium mb-4">
            <%= config[:subtitle] %>
          </h2>
        <% end %>
        
        <!-- Description -->
        <p class="text-xl md:text-2xl text-secondary dark:text-white/90 mb-8 font-cormorant leading-relaxed max-w-2xl">
          <%= simple_format(config[:description]) %>
        </p>
        
        <!-- Action Buttons -->
        <div class="flex flex-col sm:flex-row gap-4 mt-8">
          <% if config[:buttons][:primary][:text].present? && config[:buttons][:primary][:url].present? %>
            <%= link_to config[:buttons][:primary][:url], 
                        class: "inline-flex items-center justify-center px-8 py-3 bg-accent text-white font-medium rounded-full hover:bg-secondary transition-all hover:shadow-xl hover:scale-105 shadow-md group" do %>
              <span><%= config[:buttons][:primary][:text] %></span>
              <svg class="ml-2 w-5 h-5 transform group-hover:translate-x-1 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
              </svg>
            <% end %>
          <% end %>
          
          <% if config[:buttons][:secondary][:text].present? && config[:buttons][:secondary][:url].present? %>
            <%= link_to config[:buttons][:secondary][:url], 
                        class: "inline-flex items-center justify-center px-8 py-3 border-2 border-secondary dark:border-white text-secondary dark:text-white font-medium rounded-full hover:bg-secondary/10 dark:hover:bg-white/10 transition group" do %>
              <%= config[:buttons][:secondary][:text] %>
            <% end %>
          <% end %>
        </div>
      </div>
      
      <!-- Image Side - Decorated container -->
      <div class="<%= layout_classes[:image] %> relative">
        <div class="relative w-full aspect-square max-w-md mx-auto">
          <!-- Background decorative elements -->
          <div class="absolute inset-0 bg-gradient-to-br from-accent/20 to-secondary/20 dark:from-accent/40 dark:to-secondary/40 rounded-3xl -rotate-3 scale-95 transform-gpu"></div>
          <div class="absolute inset-0 bg-gradient-to-tl from-accent/20 to-secondary/20 dark:from-accent/40 dark:to-secondary/40 rounded-3xl rotate-3 scale-95 transform-gpu"></div>
          
          <!-- Main image container -->
          <div class="relative w-full h-full overflow-hidden rounded-2xl border-4 border-slate-200 dark:border-white/20 shadow-2xl backdrop-blur-sm bg-white/50 dark:bg-slate-900/50 transform-gpu rotate-1 hover:rotate-0 transition-all duration-500">
            <% if config[:image][:url].present? %>
              <%= spree_image_tag config[:image][:url], 
                                  width: 400,
                                  height: 400,
                                  alt: config[:image][:alt],
                                  class: "w-full h-full object-cover p-2 rounded-2xl",
                                  loading: "eager" %>
            <% else %>
              <div class="w-full h-full bg-gradient-to-br from-accent/20 to-primary/20 flex items-center justify-center p-2 rounded-2xl">
                <div class="text-center">
                  <svg class="w-24 h-24 text-accent/40 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                  <p class="text-accent/60 text-sm">Add Hero Image</p>
                </div>
              </div>
            <% end %>
          </div>
          
          <!-- Decorative elements - conditional based on config -->
          <% if config[:layout][:decorative_elements] %>
            <div class="absolute -bottom-4 -right-4 w-20 h-20 bg-gradient-to-br from-accent to-secondary rounded-full flex items-center justify-center text-white transform hover:scale-110 transition-transform">
              <svg width="30" height="30" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M12 3v19M3 15h18M3 8h18M12 22c0-3.314 2.686-6 6-6s6 2.686 6 6" />
              </svg>
            </div>
            <div class="absolute -top-6 -left-6 w-12 h-12 bg-accent/20 dark:bg-white/10 rounded-full blur-lg"></div>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <!-- Decorative golf ball element - conditional -->
  <% if config[:layout][:decorative_elements] %>
    <div class="absolute bottom-8 right-8 z-20 hidden md:block">
      <div class="relative w-24 h-24">
        <div class="absolute inset-0 bg-white/10 dark:bg-white/5 backdrop-blur-md rounded-full"></div>
        <div class="absolute inset-2 bg-gradient-to-br from-slate-100 to-slate-200 dark:from-slate-800 dark:to-slate-900 rounded-full flex items-center justify-center">
          <svg width="30" height="30" viewBox="0 0 24 24" fill="none" stroke="rgba(128, 190, 120, 0.8)" stroke-width="1.5">
            <path d="M12 3v19M3 15h18M3 8h18M12 22c0-3.314 2.686-6 6-6s6 2.686 6 6" />
          </svg>
        </div>
      </div>
    </div>
  <% end %>
</section>
